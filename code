import java.time.LocalDate;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

class Date implements Comparable<Date> {
    private int day;
    private int month;
    private int year;

    public Date(int day, int month, int year) {
        if (isValidDate(day, month, year)) {
            this.day = day;
            this.month = month;
            this.year = year;
        } else {
            throw new IllegalArgumentException("Invalid date!");
        }
    }

    public boolean isValidDate(int day, int month, int year) {
        try {
            LocalDate.of(year, month, day);
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    public void updateDate(int day, int month, int year) {
        if (isValidDate(day, month, year)) {
            this.day = day;
            this.month = month;
            this.year = year;
        } else {
            System.out.println("Invalid date, update failed.");
        }
    }

    public String getDayOfWeek() {
        LocalDate date = LocalDate.of(year, month, day);
        return date.getDayOfWeek().toString();
    }

    public long calculateDifference(Date otherDate) {
        LocalDate date1 = LocalDate.of(year, month, day);
        LocalDate date2 = LocalDate.of(otherDate.year, otherDate.month, otherDate.day);
        return ChronoUnit.DAYS.between(date1, date2);
    }
    public void printDate() {
        System.out.printf("%s %d, %d\n", java.time.Month.of(month), day, year);
    }
    @Override
    public int compareTo(Date other) {
        if (this.year != other.year)
            return this.year - other.year;
        if (this.month != other.month)
            return this.month - other.month;
        return this.day - other.day;
    }
}


public class Main {
    public static void main(String[] args) {
        List<Date> dates = new ArrayList<>();
        dates.add(new Date(10, 5, 2022));
        dates.add(new Date(15, 8, 2020));
        dates.add(new Date(1, 1, 2023));

        System.out.println("Unsorted Dates:");
        for (Date d : dates) d.printDate();

        Collections.sort(dates);
        System.out.println("\nSorted Dates:");
        for (Date d : dates) d.printDate();
    }
}

